<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>刘柯的个人博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://xsxs2.top/"/>
  <updated>2017-11-08T10:16:29.686Z</updated>
  <id>http://xsxs2.top/</id>
  
  <author>
    <name>lake</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>npm下载包的使用</title>
    <link href="http://xsxs2.top/2017/10/12/npm%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://xsxs2.top/2017/10/12/npm的使用/</id>
    <published>2017-10-12T03:14:45.000Z</published>
    <updated>2017-11-08T10:16:29.686Z</updated>
    
    <content type="html"><![CDATA[<h2 id="npm下载包"><a href="#npm下载包" class="headerlink" title="npm下载包"></a>npm下载包</h2><ul><li>初始化</li></ul><blockquote><p> npm init -y </p></blockquote><ul><li><p>下载包 npm install 包名 </p><p>注意：3点几版本包名后加–save</p></li></ul><blockquote><p>npm install jquery  简写 npm i jquery</p><p>npm install art-template</p></blockquote><a id="more"></a><ul><li><p>之后得到一个文件夹和两个文件</p><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">node_modules   <span class="comment">//下载包的目录</span></div><div class="line">package.json</div><div class="line">package-lock.json</div></pre></td></tr></table></figure></li></ul><h3 id="使用淘宝镜像下载包"><a href="#使用淘宝镜像下载包" class="headerlink" title="使用淘宝镜像下载包"></a>使用淘宝镜像下载包</h3><blockquote><p>npm install vue –registry=<a href="https://registry.npm.taobao.org" target="_blank" rel="external">https://registry.npm.taobao.org</a></p></blockquote><p>###下载package.json依赖包</p><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="string">"dependencies"</span>: &#123;  <span class="comment">// 依赖包</span></div><div class="line">    <span class="string">"art-template"</span>: <span class="string">"^4.12.2"</span>,</div><div class="line">    <span class="string">"bootstrap"</span>: <span class="string">"^3.3.7"</span>,</div><div class="line">    <span class="string">"jquery"</span>: <span class="string">"^3.2.1"</span>,</div><div class="line">    <span class="string">"vue"</span>: <span class="string">"^2.5.2"</span></div><div class="line">  &#125;</div></pre></td></tr></table></figure><ul><li>直接下载package.json文件中的依赖包</li></ul><blockquote><p>npm install</p><p>npm init –production  //未知作用</p></blockquote><h3 id="package-lock-json介绍"><a href="#package-lock-json介绍" class="headerlink" title="package-lock.json介绍"></a>package-lock.json介绍</h3><ul><li>记录下载的包，提高再次下载的速度</li></ul><h3 id="卸载包"><a href="#卸载包" class="headerlink" title="卸载包"></a>卸载包</h3><blockquote><p>npm uninstall 包名</p></blockquote><h3 id="安装指定版本包"><a href="#安装指定版本包" class="headerlink" title="安装指定版本包"></a>安装指定版本包</h3><blockquote><p>npm install jquery@2</p></blockquote><h3 id="查看包"><a href="#查看包" class="headerlink" title="查看包"></a>查看包</h3><blockquote><p>npm list 简写 npm ls</p></blockquote><h3 id="隐藏node-modules文件"><a href="#隐藏node-modules文件" class="headerlink" title="隐藏node_modules文件"></a>隐藏node_modules文件</h3><blockquote><p>vi .gitignore</p></blockquote><ul><li>在配置文件中添加node_modules并保存</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;npm下载包&quot;&gt;&lt;a href=&quot;#npm下载包&quot; class=&quot;headerlink&quot; title=&quot;npm下载包&quot;&gt;&lt;/a&gt;npm下载包&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;初始化&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt; npm init -y &lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;下载包 npm install 包名 &lt;/p&gt;
&lt;p&gt;注意：3点几版本包名后加–save&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;npm install jquery  简写 npm i jquery&lt;/p&gt;
&lt;p&gt;npm install art-template&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>es6初体验</title>
    <link href="http://xsxs2.top/2017/01/05/es6/"/>
    <id>http://xsxs2.top/2017/01/05/es6/</id>
    <published>2017-01-05T12:14:34.000Z</published>
    <updated>2017-11-08T10:18:19.971Z</updated>
    
    <content type="html"><![CDATA[<h2 id="箭头函数"><a href="#箭头函数" class="headerlink" title="箭头函数"></a>箭头函数</h2><ol><li>自身没有this，this指向上级</li><li>不能使用构造函数</li><li>不能使用argument ，用…代替</li><li>语法：<ul><li>形参 =&gt; 代码体</li></ul></li></ol><a id="more"></a><h2 id="let"><a href="#let" class="headerlink" title="let"></a>let</h2><ul><li>不允许重复声明</li><li>块级作用域</li><li>没有预解析</li><li>存在暂时性死区</li><li>全局变量不再是window属性</li></ul><h2 id="const-同上"><a href="#const-同上" class="headerlink" title="const(同上)"></a>const(同上)</h2><ul><li>值不容许修改</li><li>定义变量必须给值</li></ul><h2 id="字符串"><a href="#字符串" class="headerlink" title="``字符串"></a>``字符串</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 可以访问变量、调用函数、及各种表达式运算</span></div><div class="line"><span class="keyword">var</span> mei = &#123;</div><div class="line">  name: <span class="string">'小美'</span>,</div><div class="line">  age: <span class="number">16</span></div><div class="line">&#125;;</div><div class="line"><span class="keyword">let</span> str = <span class="string">`<span class="subst">$&#123; mei.name &#125;</span>今年<span class="subst">$&#123; mei.age &#125;</span>了，</span></div><div class="line"><span class="string">  还有<span class="subst">$&#123; <span class="number">30</span> - mei.age &#125;</span>年他就30了`</span>;</div><div class="line"><span class="built_in">console</span>.log(str);</div></pre></td></tr></table></figure><h2 id="…运算符"><a href="#…运算符" class="headerlink" title="…运算符"></a>…运算符</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//可获取剩余参数为数组</span></div><div class="line"><span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params">a, ...s</span>) </span>&#123;</div><div class="line">  <span class="built_in">console</span>.log(s); <span class="comment">//2, 3, 4, 5, 6</span></div><div class="line">&#125;</div><div class="line">fn(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>);</div></pre></td></tr></table></figure><h2 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//获取num的值做为obj的键</span></div><div class="line"><span class="keyword">let</span> num = <span class="string">'xxx'</span>;</div><div class="line">        <span class="keyword">let</span> obj = &#123;</div><div class="line">            a: <span class="string">'xxx'</span>,</div><div class="line">            [num]: <span class="string">'oooo'</span></div><div class="line">          <span class="comment">//键num是'xxx'</span></div><div class="line">        &#125;</div><div class="line">        <span class="built_in">console</span>.log(obj);</div></pre></td></tr></table></figure><h2 id="es5面向对象的复习"><a href="#es5面向对象的复习" class="headerlink" title="es5面向对象的复习"></a>es5面向对象的复习</h2><ol><li>构造函数首字母大写</li><li>es5及之前js是没有类的概念的</li><li>类是抽象的</li></ol><h2 id="静态和实例成员"><a href="#静态和实例成员" class="headerlink" title="静态和实例成员"></a>静态和实例成员</h2><ul><li>实例成员：供实例使用的属性的方法</li><li>静态成员：供类使用的属性方法</li></ul><h2 id="class类语法"><a href="#class类语法" class="headerlink" title="class类语法"></a>class类语法</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 定义了动物类</span></div><div class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Animal</span> </span>&#123;</div><div class="line"></div><div class="line">        <span class="comment">// 这是构造器</span></div><div class="line">        <span class="keyword">constructor</span>(name, age) &#123;</div><div class="line">            <span class="keyword">this</span>.name = name;</div><div class="line">            <span class="keyword">this</span>.age = age;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment">// 这个方法相当于以前加到原型上的实例方法</span></div><div class="line">        eat() &#123;</div><div class="line">            <span class="built_in">console</span>.log(<span class="string">'吃吧'</span>);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment">// 这个方法相当于以前加到原型上的实例方法</span></div><div class="line">        run() &#123;</div><div class="line">            <span class="built_in">console</span>.log(<span class="string">'跑吧'</span>);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="comment">// 这个方法加了static修饰符,就是以前加到类身上的静态方法</span></div><div class="line">        <span class="keyword">static</span> getAnimal(...arg) &#123;</div><div class="line">            <span class="keyword">return</span> <span class="keyword">new</span> Animal(...arg);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">var</span> mao = <span class="keyword">new</span> Animal(<span class="string">'猫咪'</span>, <span class="number">5</span>);</div><div class="line">    <span class="built_in">console</span>.log(mao.name);</div><div class="line">    <span class="built_in">console</span>.log(mao.age);</div><div class="line">    mao.eat();</div><div class="line">    mao.run();</div><div class="line"></div><div class="line">    <span class="comment">// 静态方法由类名直接调用</span></div><div class="line">    Animal.getAnimal(<span class="string">'宝宝'</span>, <span class="number">8</span>);</div><div class="line"></div><div class="line"><span class="comment">//extends 继承</span></div></pre></td></tr></table></figure><h2 id="Object-对象（es6）"><a href="#Object-对象（es6）" class="headerlink" title="Object 对象（es6）"></a>Object 对象（es6）</h2><ul><li><p>Object.assign(a,b); </p><p>作用：把后面对象的第一层属性copy给第一个对象</p><p>a继承b内容</p></li><li><p>Object.keys </p><p>作用：获取对象所有的key</p></li><li><p>Object.values</p><p>作用：获取对象所有的value</p></li></ul><h3 id="filter"><a href="#filter" class="headerlink" title="filter"></a>filter</h3><blockquote><p>es5方法filter,可以用来寻找多个符合条件的值</p></blockquote><h2 id="set"><a href="#set" class="headerlink" title="set"></a>set</h2><p>set 介绍：新增的构造函数，用于创建新数据结构的集合对象，特点是值唯一</p><ul><li>size 去重（集合成员数量）</li><li>add 添加新值</li><li>delte删除值</li><li>has判断有没有某个值</li><li>clear清空所有值</li></ul><h2 id="for-of"><a href="#for-of" class="headerlink" title="for of"></a>for of</h2><blockquote><p>for of 语句是es6新增的循环语句</p><p>作用：用来遍历数组以及内置的伪数组结构中的值，另外Set Map 也支持</p></blockquote><h2 id="Map"><a href="#Map" class="headerlink" title="Map"></a>Map</h2><blockquote><p>传统的对象，不管你使用什么方式添加key，最终都会转为字符串</p><p>es6新增了一种数据结构,Map,类似与传统对象,特点是key可以是任意东西</p></blockquote><ul><li><p>set 添加值</p></li><li><p>get 获取值</p><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">map.set(obj, <span class="number">500</span>);</div><div class="line"> <span class="built_in">console</span>.log(map.get(obj));  <span class="comment">// 500</span></div></pre></td></tr></table></figure></li></ul><h2 id="Promise"><a href="#Promise" class="headerlink" title="Promise"></a>Promise</h2><blockquote><p>使用Promise</p></blockquote><ol><li>第一步: new Promise  需要传一个回调函数, 这个函数供promise使用,promise在使用它的时候会传入两个方法yes与no</li><li>第二步: 调用实例的then方法做事情,这个then添加的方法会在承诺生效后执行</li></ol><ul><li><p>promise 实例创建好之后，执行我们传入的回调，执行这个回调是为了给回调提供yes与no方法，调用了yes执行then，调用no执行所有的then或catch.</p><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//yes.no是形参 名字随意</span></div><div class="line"><span class="comment">//第一个代表成功，第二个是失败</span></div><div class="line"><span class="keyword">let</span> p = <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="keyword">function</span>(<span class="params">yes, no</span>) </span>&#123;</div><div class="line">       setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">          no();</div><div class="line">       &#125;, <span class="number">1000</span> * <span class="number">10</span>);</div><div class="line">    &#125;);</div></pre></td></tr></table></figure></li></ul><h2 id="async"><a href="#async" class="headerlink" title="async"></a>async</h2><blockquote><p> 强制按顺序执行</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">fn</span>(<span class="params"></span>) </span>&#123;</div><div class="line">        <span class="comment">// await会等待promise成功,成功后在会向下走,直到遇到下一个await</span></div><div class="line">        <span class="keyword">let</span> a = <span class="keyword">await</span> getTimeout(<span class="number">5000</span>);</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">`第一个定时器执行完毕了__<span class="subst">$&#123;a&#125;</span>`</span>);</div><div class="line">        <span class="keyword">await</span> getTimeout(<span class="number">3000</span>);</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">'第二个定时器执行完毕了'</span>);</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">'加多少代码都可以'</span>);</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">'加多少代码都可以'</span>);</div><div class="line">        <span class="keyword">await</span> getTimeout(<span class="number">1000</span>);</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">'第二个定时器执行完毕了'</span>);</div><div class="line">    &#125;</div><div class="line"> fn();</div><div class="line"></div><div class="line"><span class="comment">//添加失败处理</span></div><div class="line">fn().catch(<span class="function"><span class="params">()</span> =&gt;</span> <span class="built_in">console</span>.log(<span class="string">'fn方法内部出现了promise失败的情况'</span>));</div></pre></td></tr></table></figure><h2 id="webpack安装"><a href="#webpack安装" class="headerlink" title="webpack安装"></a>webpack安装</h2><blockquote><p>npm install -g webpack  安装</p><p>webpack -v   查看包的版本</p></blockquote><ul><li><p>import {c} ‘./a.js’   //导包  main.js</p></li><li><p>export let c;    //导出    a.js</p></li><li><p>转换 (必须)</p><blockquote><p>webpack main.js budd.js</p></blockquote></li><li><p>批量整体导出</p><blockquote><p>export { year, month, day, getDate };</p></blockquote></li><li><p>批量整体导入</p><blockquote><p>import * as a from ‘./a.js’;</p></blockquote></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;箭头函数&quot;&gt;&lt;a href=&quot;#箭头函数&quot; class=&quot;headerlink&quot; title=&quot;箭头函数&quot;&gt;&lt;/a&gt;箭头函数&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;自身没有this，this指向上级&lt;/li&gt;
&lt;li&gt;不能使用构造函数&lt;/li&gt;
&lt;li&gt;不能使用argument ，用…代替&lt;/li&gt;
&lt;li&gt;语法：&lt;ul&gt;
&lt;li&gt;形参 =&amp;gt; 代码体&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Uploadify上传插件使用的坑</title>
    <link href="http://xsxs2.top/2016/12/09/%E4%BD%BF%E7%94%A8Uploadify%E7%9A%84%E5%90%84%E7%A7%8D%E5%9D%91/"/>
    <id>http://xsxs2.top/2016/12/09/使用Uploadify的各种坑/</id>
    <published>2016-12-09T04:14:25.000Z</published>
    <updated>2017-10-26T03:09:48.046Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p>使用Uploadify  前提</p><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">'#file'</span>).uploadify(&#123;            <span class="comment">//必须是ID名</span></div><div class="line">      　　 <span class="string">'swf'</span>      :<span class="string">'uploadify.swf'</span>, <span class="comment">//路径必须对</span></div><div class="line">   　　　&#125;);</div><div class="line">   　&#125;);</div></pre></td></tr></table></figure></li><li><p>要使用服务器打开，本地打开无效</p><a id="more"></a></li><li><p>uploadify.js文件要在jquery.js后面引入</p></li><li><p>用谷歌浏览器打开在地址栏最左边点击查看网站信息，Flash改为始终允许</p></li><li><p>uploadify常用参数</p><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//注意：上传文件的file标签必须通过id来获取</span></div><div class="line">$courseImage.find(<span class="string">"#fileImage"</span>).uploadify(&#123;</div><div class="line">  <span class="comment">//指定要传递到服务器中的额外参数</span></div><div class="line">  formData: &#123;</div><div class="line">    cs_id: id</div><div class="line">  &#125;,</div><div class="line"></div><div class="line">  <span class="comment">//服务器接收文件流的name名称</span></div><div class="line">  fileObjName: <span class="string">"cs_cover_original"</span>,</div><div class="line"></div><div class="line">  <span class="comment">//指向本地的swf文件</span></div><div class="line">  swf: <span class="string">'/assets/uploadify/uploadify.swf'</span>,</div><div class="line"></div><div class="line">  <span class="comment">//处理请求的服务器地址</span></div><div class="line">  uploader: <span class="string">'/api/uploader/cover'</span>,</div><div class="line"></div><div class="line">  <span class="comment">//文件已经上传成功</span></div><div class="line">  onUploadSuccess: <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</div><div class="line">...</div><div class="line">  &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure><p>​</p><p>​</p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;p&gt;使用Uploadify  前提&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$(&lt;span class=&quot;string&quot;&gt;&#39;#file&#39;&lt;/span&gt;).uploadify(&amp;#123;           		 &lt;span class=&quot;comment&quot;&gt;//必须是ID名&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;      　　 &lt;span class=&quot;string&quot;&gt;&#39;swf&#39;&lt;/span&gt;      :&lt;span class=&quot;string&quot;&gt;&#39;uploadify.swf&#39;&lt;/span&gt;, &lt;span class=&quot;comment&quot;&gt;//路径必须对&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   　　　&amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   　&amp;#125;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;要使用服务器打开，本地打开无效&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>template模版的使用</title>
    <link href="http://xsxs2.top/2016/11/19/%E6%A8%A1%E7%89%88%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://xsxs2.top/2016/11/19/模版的使用/</id>
    <published>2016-11-19T12:24:04.000Z</published>
    <updated>2017-10-26T03:06:24.689Z</updated>
    
    <content type="html"><![CDATA[<h2 id="模版的2种使用方式"><a href="#模版的2种使用方式" class="headerlink" title="模版的2种使用方式"></a>模版的2种使用方式</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="number">1</span>)template(<span class="string">"script标签的id,数据"</span>)</div></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="number">2</span>)template.render(<span class="string">"模版内容,数据"</span>)</div></pre></td></tr></table></figure><a id="more"></a><h2 id="bootstrap-css样式bug"><a href="#bootstrap-css样式bug" class="headerlink" title="bootstrap css样式bug"></a>bootstrap css样式bug</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="number">1</span>)</div><div class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-md-1"</span>&gt;<span class="comment">//栅格col-md-1 是盒子，里面放内容</span></div><div class="line">    &lt;button <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn btn-success"</span>&gt;</div><div class="line">      &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"glyphicon glyphicon-cloud"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></div><div class="line">&lt;<span class="regexp">/button&gt;</span></div><div class="line"><span class="regexp">&lt;/</span>div&gt;</div><div class="line">&lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-md-1 col-md-offset-9"</span>&gt;个人中心&lt;<span class="regexp">/div&gt;</span></div><div class="line"><span class="regexp">&lt;div class="col-md-1"&gt;退出&lt;/</span>div&gt;</div><div class="line"><span class="number">2</span>)</div><div class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"row"</span>&gt;     <span class="comment">//单独用栅格 外面加.row</span></div><div class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"col-md-1 col-md-offset-10"</span>&gt;</div><div class="line">      &lt;button <span class="class"><span class="keyword">class</span></span>=<span class="string">"btn btn-success btn-add"</span>&gt;添加讲师&lt;<span class="regexp">/button&gt;</span></div><div class="line"><span class="regexp">&lt;/</span>div&gt;</div><div class="line">&lt;<span class="regexp">/div&gt;</span></div></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&lt;script src=<span class="string">"js/lib/require.js"</span> data-main=<span class="string">"main"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span> <span class="comment">//引入require.js和main.js入口文件(main后无js)</span></div></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//入口文件path 加s</span></div><div class="line"><span class="built_in">require</span>.config(&#123;</div><div class="line">    baseUrl: <span class="string">'js'</span>,</div><div class="line">    paths: &#123;<span class="comment">//paths(不加s提示jquery 404)</span></div><div class="line">        <span class="string">'jquery'</span>: <span class="string">'lib/jquery-2.1.4'</span>,</div><div class="line">    &#125;</div><div class="line">&#125;);</div><div class="line"><span class="built_in">require</span>([<span class="string">'jquery'</span>], <span class="function"><span class="keyword">function</span>(<span class="params">$</span>) </span>&#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'...'</span>);</div><div class="line">&#125;)</div></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">GET http:<span class="comment">//bxg11.com/aip/teacher 404 (Not Found)  //ajax url 有错误</span></div></pre></td></tr></table></figure><h2 id="url地址中文解析"><a href="#url地址中文解析" class="headerlink" title="url地址中文解析"></a>url地址中文解析</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// url地址有中文</span></div><div class="line"><span class="comment">//通过decodeURI(s1) 解码操作</span></div><div class="line"><span class="comment">//通过encodeURI(s2) 编码操作</span></div></pre></td></tr></table></figure><h2 id="localStorage-存储对象的方式"><a href="#localStorage-存储对象的方式" class="headerlink" title="localStorage 存储对象的方式"></a>localStorage 存储对象的方式</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="number">1</span>)序列化为<span class="built_in">JSON</span>(string)进行存储</div><div class="line"><span class="built_in">JSON</span>.stringify(); <span class="comment">//存储</span></div><div class="line"><span class="number">2</span>)反序列化为对象</div><div class="line"><span class="built_in">JSON</span>.parse();<span class="comment">//调用</span></div></pre></td></tr></table></figure><h2 id="cookie-的使用"><a href="#cookie-的使用" class="headerlink" title="cookie 的使用"></a>cookie 的使用</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment">//cookie是不能跨域的</span></div><div class="line">    <span class="comment">//1、保存一条数据</span></div><div class="line">    <span class="built_in">document</span>.cookie=<span class="string">"name=abc"</span>;</div><div class="line">    <span class="built_in">document</span>.cookie=<span class="string">"age=18"</span>;</div><div class="line">    <span class="comment">//2、获取所有数据</span></div><div class="line">    <span class="keyword">var</span> cookie=<span class="built_in">document</span>.cookie;</div><div class="line">    <span class="built_in">console</span>.log(cookie);  <span class="comment">//"name=abc; age=18; PHPSESSID=fr1njdv6apf3neoj5nehntrps7"</span></div><div class="line">    <span class="comment">//之后可以解析字符串，获取指定的数据内容</span></div><div class="line">    <span class="comment">//3、设置cookie的有效期</span></div><div class="line">  <span class="built_in">document</span>.cookie=<span class="string">"id=666;expires="</span>+<span class="keyword">new</span> <span class="built_in">Date</span>(<span class="string">"2017-10-22 08:00"</span>);</div><div class="line"></div><div class="line"><span class="comment">//导入cookie.js操作</span></div><div class="line">$.cookie(<span class="string">'phone'</span>,<span class="string">'131xxxxx'</span>); <span class="comment">//设置cookie</span></div><div class="line"><span class="keyword">var</span> phone =$.cookie(<span class="string">'phone'</span>);<span class="comment">//获取cookie</span></div><div class="line">$.cookie(<span class="string">'tel'</span>,<span class="string">'131xxx'</span>,&#123;</div><div class="line">    expries:<span class="number">7</span>  <span class="comment">//设置cookie有效期</span></div><div class="line">&#125;)</div><div class="line">$.removeCookie(<span class="string">'tel'</span>) <span class="comment">//删除指定cookie</span></div></pre></td></tr></table></figure><h2 id="用jquery开发插件"><a href="#用jquery开发插件" class="headerlink" title="用jquery开发插件"></a>用jquery开发插件</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">define([</div><div class="line">    <span class="string">"jquery"</span></div><div class="line">],<span class="function"><span class="keyword">function</span>(<span class="params">$</span>)</span>&#123;</div><div class="line">    <span class="comment">//开发一个基于jquery+bootstrap的模态框插件</span></div><div class="line">    $.fn.extend(&#123;</div><div class="line">        myModal:<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">            <span class="keyword">this</span>.on(<span class="string">"hidden.bs.modal"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">                <span class="comment">//移除模态框容器</span></div><div class="line">                <span class="keyword">this</span>.remove();</div><div class="line">            &#125;).appendTo(<span class="string">"body"</span>).modal();</div><div class="line">            <span class="keyword">return</span> <span class="keyword">this</span>;</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">  </div><div class="line">  <span class="comment">//调用插件</span></div><div class="line">    $(<span class="string">"body"</span>).myModal(); </div><div class="line">  </div><div class="line">    <span class="comment">//关于jquery插件，分类2种类型</span></div><div class="line">    <span class="comment">//1、工具类插件：jquery.cookie.js  --&gt;$.cookie  $.removeCookie     $.xxx</span></div><div class="line">    <span class="comment">//如果要开发一个工具类插件的话，就可以直接给$添加 属性or方法</span></div><div class="line">    <span class="comment">//                          也可以调用 $.extend(  &#123;  a:function()&#123;&#125;,b:function()&#123;&#125;  &#125;  )</span></div><div class="line">    <span class="comment">//                                      --&gt;相当于给$添加了a和b2个方法</span></div><div class="line"></div><div class="line">    <span class="comment">//2、DOM操作类插件：bootstrap.js   --&gt;$(...).modal();</span></div><div class="line">    <span class="comment">//要想开发一个DOM操作类插件，可以直接给$.fn($.prototype)添加  "属性or方法"</span></div><div class="line">    <span class="comment">//                  也可以 $.fn.extend( &#123;  f1:function()&#123;&#125;,f2:function()&#123;&#125;  &#125;  )</span></div><div class="line">&#125;)</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;模版的2种使用方式&quot;&gt;&lt;a href=&quot;#模版的2种使用方式&quot; class=&quot;headerlink&quot; title=&quot;模版的2种使用方式&quot;&gt;&lt;/a&gt;模版的2种使用方式&lt;/h2&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)template(&lt;span class=&quot;string&quot;&gt;&quot;script标签的id,数据&quot;&lt;/span&gt;)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)template.render(&lt;span class=&quot;string&quot;&gt;&quot;模版内容,数据&quot;&lt;/span&gt;)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>星星学项目总结</title>
    <link href="http://xsxs2.top/2016/10/09/%E5%8D%9A%E5%AD%A6%E8%B0%B7%E9%A1%B9%E7%9B%AE%E6%80%BB%E7%BB%93/"/>
    <id>http://xsxs2.top/2016/10/09/博学谷项目总结/</id>
    <published>2016-10-09T13:04:04.000Z</published>
    <updated>2017-11-08T10:26:04.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="讲师列表模块"><a href="#讲师列表模块" class="headerlink" title="讲师列表模块"></a>讲师列表模块</h2><h3 id="bootstrap布局"><a href="#bootstrap布局" class="headerlink" title="bootstrap布局"></a>bootstrap布局</h3><ul><li>给button按钮添加一个类名：btn-block，就可以让这个按钮铺满整个容器</li></ul><h3 id="表单异步"><a href="#表单异步" class="headerlink" title="表单异步"></a>表单异步</h3><ol><li>默认是同步表单，页面刷新（资源重复加载）;</li><li>把表单做成异步的表单；好处：局部刷新(e.preventDefault();从而阻止页面刷新)</li></ol><a id="more"></a><h3 id="阻止表单的默认行为"><a href="#阻止表单的默认行为" class="headerlink" title="阻止表单的默认行为"></a>阻止表单的默认行为</h3><ul><li>第一种方式：  <figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$(<span class="string">"form"</span>).on(<span class="string">"submit"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">  <span class="comment">//第一种</span></div><div class="line">    e.preventDefault();</div><div class="line">  <span class="comment">//第二种</span></div><div class="line">    <span class="keyword">return</span> <span class="literal">false</span>;           <span class="comment">//不仅仅可以阻止事件默认行为，还可以阻止事件冒泡     </span></div><div class="line">  &#125;)</div></pre></td></tr></table></figure></li></ul><h3 id="获取表单数据的方式："><a href="#获取表单数据的方式：" class="headerlink" title="获取表单数据的方式："></a>获取表单数据的方式：</h3><ol><li><p>要给所有即将提交的表单,给表单指定一个name，这个name通过接口名称指定</p></li><li><p>在form表单的submit事件内部，通过$(this).serialize();可以一次性的获取到所有的需要提交的表单数据</p><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"> <span class="comment">//页面跳转；</span></div><div class="line">location.href=<span class="string">"index.html"</span>;</div><div class="line"><span class="comment">//模拟点击(自动点击一次)</span></div><div class="line">$(<span class="string">"xxx"</span>).trigger(<span class="string">"click"</span>);</div></pre></td></tr></table></figure></li></ol><h3 id="require-js的使用"><a href="#require-js的使用" class="headerlink" title="require.js的使用"></a>require.js的使用</h3><ol><li><p>设置入口文件main.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">require</span>.config(&#123;</div><div class="line">  <span class="number">1</span>）设置基础路径</div><div class="line">    baseUrl: <span class="string">"js"</span>,  <span class="comment">//相对html路径</span></div><div class="line">  <span class="number">2</span>）配置一些常用的第三方模块路径(不能有后缀，有了后缀会报错)</div><div class="line">    paths: &#123;<span class="comment">//相对baseUrl路径</span></div><div class="line">        jquery: <span class="string">"lib/jquery-2.1.4"</span>,</div><div class="line">        bootstrap: <span class="string">"../assets/bootstrap/js/bootstrap"</span>,</div><div class="line">        <span class="comment">//arttemplate模板引擎</span></div><div class="line">        art:<span class="string">"lib/template-web"</span>,</div><div class="line">        <span class="comment">//requirejs官方提供的加载html文件的插件</span></div><div class="line">        text:<span class="string">"lib/text"</span>,</div><div class="line">        <span class="comment">//配置一些文件夹路径</span></div><div class="line">        tpls: <span class="string">"../tpls"</span></div><div class="line">    &#125;,</div><div class="line">    <span class="number">3</span>）先后加载顺序</div><div class="line">    shim: &#123;</div><div class="line">        <span class="comment">//bootstrap将会在jquery整个文件读取完毕之后再去执行</span></div><div class="line">        bootstrap: &#123;</div><div class="line">            deps: [<span class="string">"jquery"</span>]</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">//入口模块</span></div><div class="line"><span class="built_in">require</span>([<span class="string">"jquery"</span>,<span class="comment">//导入jquery</span></div><div class="line">         <span class="string">"teacher/list"</span><span class="comment">//导入js路径下的list.js</span></div><div class="line">        ], <span class="function"><span class="keyword">function</span> (<span class="params">$,teacherList</span>) </span>&#123;</div><div class="line">  <span class="comment">//形参与导包顺序一一对应（形参接收返回值）</span></div><div class="line">  <span class="keyword">do</span> something...;</div><div class="line">&#125;)</div></pre></td></tr></table></figure></li><li><p>讲师列表模块(list.js)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">define([</div><div class="line">    <span class="string">"jquery"</span>,</div><div class="line">    <span class="comment">//用requireJS官方提供的text查看读取模板内容</span></div><div class="line">    <span class="comment">//text插件的路径 !  模板文件的路径(不能省略.html后缀名)</span></div><div class="line">    <span class="string">"text!tpls/teacherListTpl.html"</span>,</div><div class="line">    <span class="comment">//arttemplate模板引擎</span></div><div class="line">    <span class="string">"art"</span></div><div class="line">],<span class="function"><span class="keyword">function</span>(<span class="params">$,teacherListTpl,art</span>)</span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        $.ajax(&#123;</div><div class="line">            url:<span class="string">"/api/teacher"</span>,</div><div class="line">            type:<span class="string">"get"</span>,</div><div class="line">            success:<span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span>&#123;</div><div class="line">                <span class="comment">//请求成功：最大的好处：减少了&#123;&#125;的嵌套</span></div><div class="line">                <span class="keyword">var</span> result=res.result;</div><div class="line">                <span class="comment">//把数据编译到模板中--&gt;获取到真实的内容</span></div><div class="line">                <span class="keyword">var</span> html=art.render(teacherListTpl,&#123;</div><div class="line">                    r:result</div><div class="line">                &#125;);</div><div class="line">                <span class="comment">//把真实的内容放到页面中</span></div><div class="line">                $(<span class="string">".main"</span>).html(html);</div><div class="line">            &#125;</div><div class="line">        &#125;)</div><div class="line">    &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure><ul><li>html模块</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">tbody</span>&gt;</span></div><div class="line">  &#123;&#123;each r&#125;&#125;  <span class="comment">&lt;!-- 循环遍历 r  --&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;$value.tc_name&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span>  <span class="comment">&lt;!-- $value==r --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;$value.tc_roster&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;$value.tc_gender==0?"男":"女"&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span>  <span class="comment">&lt;!-- 判断 --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;$value.tc_cellphone&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;$value.tc_email&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;$value.tc_status==0?"启用":"注销"&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;$value.tc_join_date&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>&#123;&#123;$value.tc_birthday&#125;&#125;<span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-success"</span>&gt;</span>查看<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span>&gt;</span>编辑<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-info"</span>&gt;</span>&#123;&#123;$value.tc_status==0?"注销":"启用"&#125;&#125;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></div><div class="line">  &#123;&#123;/each&#125;&#125;</div><div class="line"><span class="tag">&lt;/<span class="name">tbody</span>&gt;</span></div></pre></td></tr></table></figure><p>​</p></li></ol><h2 id="查看讲师"><a href="#查看讲师" class="headerlink" title="查看讲师"></a>查看讲师</h2><h3 id="查看讲师的模块（main-js）"><a href="#查看讲师的模块（main-js）" class="headerlink" title="查看讲师的模块（main.js）"></a>查看讲师的模块（main.js）</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div></pre></td><td class="code"><pre><div class="line">define([</div><div class="line">    <span class="string">"jquery"</span>,</div><div class="line">    <span class="string">"text!tpls/teacherShowTpl.html"</span>,     <span class="comment">//查看讲师的模板</span></div><div class="line">    <span class="string">"art"</span></div><div class="line">],<span class="function"><span class="keyword">function</span>(<span class="params">$,teacherShowTpl,art</span>)</span>&#123;</div><div class="line">  <span class="comment">//返回一个函数，等待调用</span></div><div class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params">id</span>)</span>&#123;</div><div class="line">        $.ajax(&#123;</div><div class="line">            url:<span class="string">"/api/teacher/view"</span>,</div><div class="line">            type:<span class="string">"get"</span>,</div><div class="line">            data:&#123;</div><div class="line">                tc_id:id</div><div class="line">            &#125;,</div><div class="line">            success:<span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span>&#123;</div><div class="line">              <span class="comment">//抛出异常</span></div><div class="line">                <span class="keyword">if</span>(res.code!=<span class="number">200</span>) <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(res.msg);</div><div class="line">                <span class="comment">//a、正常的获取了数据</span></div><div class="line">                <span class="comment">//b、把数据编译到模板中</span></div><div class="line">                <span class="keyword">var</span> html=art.render(teacherShowTpl,res.result);</div><div class="line">                <span class="comment">//c、把编译好的内容放到页面中，并且以模态框的形式呈现</span></div><div class="line">                <span class="comment">//$html接受了右侧表达式的返回值，而因为右侧表达式实现了链式编程，所以右侧表达式的返回值也是模态框的容器</span></div><div class="line">                <span class="keyword">var</span> $html=$(html).on(<span class="string">"hidden.bs.modal"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line"><span class="comment">//hidden.bs.modal模态框隐藏后事件</span></div><div class="line">                    <span class="comment">//将本模态框的容器从页面中移除</span></div><div class="line">                    $html.remove();</div><div class="line">                 <span class="comment">//模态框添加到body并显示 </span></div><div class="line">                &#125;).appendTo(<span class="string">"body"</span>).modal();</div><div class="line">            &#125;</div><div class="line">        &#125;)</div><div class="line">    &#125;</div><div class="line">&#125;)</div><div class="line"></div><div class="line"><span class="comment">//注：list.js模块导入mani.js并调用</span></div><div class="line">teacherShow(tc_id);</div></pre></td></tr></table></figure><h2 id="添加讲师模块-add-js"><a href="#添加讲师模块-add-js" class="headerlink" title="添加讲师模块(add.js)"></a>添加讲师模块(add.js)</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div></pre></td><td class="code"><pre><div class="line">define([</div><div class="line">    <span class="string">"jquery"</span>,</div><div class="line">    <span class="string">"text!tpls/teacherAddTpl.html"</span>,</div><div class="line">],<span class="function"><span class="keyword">function</span>(<span class="params">$,teacherAddTpl</span>)</span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">        <span class="keyword">var</span> $html=$(teacherAddTpl);</div><div class="line">        $html.on(<span class="string">"hidden.bs.modal"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">            <span class="comment">//移除模态框容器</span></div><div class="line">            $(<span class="keyword">this</span>).remove();       <span class="comment">//也可以使用：$html.remove();</span></div><div class="line">        &#125;).on(<span class="string">"submit"</span>,<span class="string">"form"</span>,<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</div><div class="line">            <span class="comment">//阻止页面刷新</span></div><div class="line">            e.preventDefault();</div><div class="line">            <span class="comment">//获取表单数据</span></div><div class="line">            <span class="keyword">var</span> formData=$(<span class="keyword">this</span>).serialize();       <span class="comment">//表单都应该具有指定的name属性</span></div><div class="line">            <span class="comment">//ajax提交</span></div><div class="line">            $.ajax(&#123;</div><div class="line">                url:<span class="string">"/api/teacher/add"</span>,</div><div class="line">                type:<span class="string">"post"</span>,</div><div class="line">                data:formData,</div><div class="line">                success:<span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span>&#123;</div><div class="line">                    <span class="keyword">if</span>(res.code!=<span class="number">200</span>) <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(res.msg);</div><div class="line">                    <span class="comment">//隐藏模态框</span></div><div class="line">                    $html.modal(<span class="string">"hide"</span>);</div><div class="line">                    <span class="comment">//模拟点击讲师管理按钮，实现刷新讲师列表</span></div><div class="line">                    $(<span class="string">".list-group a[v=teacher]"</span>).trigger(<span class="string">"click"</span>);</div><div class="line">                &#125;</div><div class="line">            &#125;)</div><div class="line">        &#125;).appendTo(<span class="string">"body"</span>).modal();</div><div class="line">    &#125;</div><div class="line">&#125;)</div><div class="line"></div><div class="line"><span class="comment">//注：list.js模块导入add.js并调用</span></div><div class="line">teacheradd();</div><div class="line"></div><div class="line"><span class="comment">//导入模态框时最后面的注释删除(否则会有遮罩层)</span></div></pre></td></tr></table></figure><h2 id="编辑讲师模块"><a href="#编辑讲师模块" class="headerlink" title="编辑讲师模块"></a>编辑讲师模块</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">define([</div><div class="line">    <span class="string">"jquery"</span>,</div><div class="line">    <span class="string">"text!tpls/teacherEditTpl.html"</span>,</div><div class="line">    <span class="string">"art"</span></div><div class="line">], <span class="function"><span class="keyword">function</span> (<span class="params">$, teacherEditTpl, art</span>) </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span> (<span class="params">id</span>) </span>&#123;</div><div class="line">      $.ajax(&#123;&#125;);</div><div class="line">    &#125;</div><div class="line">    &#125;</div><div class="line">&#125;)</div><div class="line"></div><div class="line"><span class="comment">//注：list.js模块导入edit.js并调用</span></div><div class="line">$(html).on(<span class="string">"click"</span>,<span class="string">".btn-edit"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">                    <span class="comment">//编辑讲师：</span></div><div class="line">                    <span class="keyword">var</span> tc_id=$(<span class="keyword">this</span>).parent().attr(<span class="string">"tc_id"</span>);</div><div class="line"><span class="comment">//调用   </span></div><div class="line">                    teacherEdit(tc_id);</div><div class="line">                &#125;);</div></pre></td></tr></table></figure><ul><li>teacherEditTpl.html模块</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">&#123;&#123;if(tc_gender==0)&#125;&#125;</div><div class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"radio-inline"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">checked</span>=<span class="string">"checked"</span> <span class="attr">name</span>=<span class="string">"tc_gender"</span> <span class="attr">value</span>=<span class="string">"0"</span>&gt;</span> 男</div><div class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"radio-inline"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"tc_gender"</span> <span class="attr">value</span>=<span class="string">"1"</span>&gt;</span> 女</div><div class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">&#123;&#123;else&#125;&#125;</div><div class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"radio-inline"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"tc_gender"</span> <span class="attr">value</span>=<span class="string">"0"</span>&gt;</span> 男</div><div class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">class</span>=<span class="string">"radio-inline"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">checked</span>=<span class="string">"checked"</span> <span class="attr">name</span>=<span class="string">"tc_gender"</span> <span class="attr">value</span>=<span class="string">"1"</span>&gt;</span> 女</div><div class="line"><span class="tag">&lt;/<span class="name">label</span>&gt;</span></div><div class="line">&#123;&#123;/if&#125;&#125;</div></pre></td></tr></table></figure><h2 id="日期控件的使用"><a href="#日期控件的使用" class="headerlink" title="日期控件的使用"></a>日期控件的使用</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html lang=<span class="string">"en"</span>&gt;</div><div class="line">&lt;head&gt;</div><div class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</div><div class="line">    &lt;title&gt;Title&lt;<span class="regexp">/title&gt;</span></div><div class="line"><span class="regexp">    &lt;!--bootstrap样式--&gt;</span></div><div class="line"><span class="regexp">    &lt;link rel="stylesheet" href="../</span>assets/bootstrap/css/bootstrap.css<span class="string">"&gt;</span></div><div class="line"><span class="string">    &lt;!--日期控件样式--&gt;</span></div><div class="line"><span class="string">    &lt;link rel="</span>stylesheet<span class="string">" href="</span>../assets/bootstrap-datetimepicker/css/bootstrap-datetimepicker.css<span class="string">"&gt;</span></div><div class="line"><span class="string">&lt;/head&gt;</span></div><div class="line"><span class="string">&lt;body&gt;</span></div><div class="line"><span class="string">&lt;input type="</span>text<span class="string">" id="</span>datetimepicker<span class="string">"&gt;</span></div><div class="line"><span class="string">&lt;/body&gt;</span></div><div class="line"><span class="string">&lt;script src="</span>../js/lib/jquery<span class="number">-2.1</span><span class="number">.4</span>.js<span class="string">"&gt;&lt;/script&gt;</span></div><div class="line"><span class="string">&lt;script src="</span>../assets/bootstrap-datetimepicker/js/bootstrap-datetimepicker.js<span class="string">"&gt;&lt;/script&gt;</span></div><div class="line"><span class="string">&lt;script src="</span>../assets/bootstrap-datetimepicker/js/locales/bootstrap-datetimepicker.zh-CN.js<span class="string">"&gt;&lt;/script&gt;</span></div><div class="line"><span class="string">&lt;script&gt;</span></div><div class="line"><span class="string">    $('#datetimepicker').datetimepicker(&#123;</span></div><div class="line"><span class="string">        //日期格式化：指定要显示诸如“年-月-日” or "</span>月-日-年<span class="string">"</span></div><div class="line"><span class="string">        //"</span>HH<span class="string">"表示12小时制的小时数  hh表示24小时制  ii表示分钟数</span></div><div class="line"><span class="string">        format: 'yyyy-mm-dd',</span></div><div class="line"><span class="string">//选择从星期几开始 默认 0（星期日）</span></div><div class="line"><span class="string">        weekStart:1,</span></div><div class="line"><span class="string">        //指定最早可以选择的时间</span></div><div class="line"><span class="string">        startDate:"</span><span class="number">1949</span><span class="number">-10</span><span class="number">-01</span> <span class="number">08</span>:<span class="number">00</span><span class="string">",</span></div><div class="line"><span class="string">        //指定最晚可以选择的时间</span></div><div class="line"><span class="string">        endDate:"</span><span class="number">2030</span><span class="number">-01</span><span class="number">-01</span> <span class="number">08</span>:<span class="number">00</span><span class="string">",</span></div><div class="line"><span class="string">        //指定每周的哪些天不能选择：  比如:"</span>周末不上班的公司<span class="string">"</span></div><div class="line"><span class="string">        daysOfWeekDisabled:[0,6],</span></div><div class="line"><span class="string">        //当你选择完一个日期之后是否是自动关闭选择器</span></div><div class="line"><span class="string">        autoclose:true,</span></div><div class="line"><span class="string">        //指定一开始显示的视图:  "</span>month<span class="string">"--&gt;可以看到一个月有多少天  "</span>hour<span class="string">"--&gt;看到当前这个小时有多少个分钟    "</span>day<span class="string">"--&gt;看到今天多少个小时</span></div><div class="line"><span class="string">        startView:"</span>hour<span class="string">",</span></div><div class="line"><span class="string">        //最小能看到的视图：</span></div><div class="line"><span class="string">        minView:"</span>month<span class="string">",</span></div><div class="line"><span class="string">        //是否显示"</span>今天<span class="string">"按钮</span></div><div class="line"><span class="string">        todayBtn:true,</span></div><div class="line"><span class="string">        //表示今天这个日期是否高亮</span></div><div class="line"><span class="string">        todayHighlight:true,</span></div><div class="line"><span class="string">        //指定选择器的语言；要想指定语言必须首先导入相应的语言包</span></div><div class="line"><span class="string">        language:"</span>zh-CN<span class="string">"</span></div><div class="line"><span class="string">    &#125;);</span></div><div class="line"><span class="string">&lt;/script&gt;</span></div><div class="line"><span class="string">&lt;/html&gt;</span></div></pre></td></tr></table></figure><h2 id="注销-启用讲师"><a href="#注销-启用讲师" class="headerlink" title="注销-启用讲师"></a>注销-启用讲师</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line">define([</div><div class="line">    <span class="string">"jquery"</span></div><div class="line">],<span class="function"><span class="keyword">function</span>(<span class="params">$</span>)</span>&#123;</div><div class="line">    <span class="comment">/**</span></div><div class="line"><span class="comment">     * @param callback 回调函数</span></div><div class="line"><span class="comment">     */</span></div><div class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">function</span>(<span class="params">id,status,callback</span>)</span>&#123;</div><div class="line">        <span class="comment">//a、修改服务器中的数据</span></div><div class="line">        $.ajax(&#123;</div><div class="line">            url:<span class="string">"/api/teacher/handle"</span>,</div><div class="line">            type:<span class="string">"post"</span>,</div><div class="line">            data:&#123;</div><div class="line">                tc_id:id,</div><div class="line">                tc_status:status</div><div class="line">            &#125;,</div><div class="line">            success:<span class="function"><span class="keyword">function</span>(<span class="params">res</span>)</span>&#123;</div><div class="line">                <span class="keyword">if</span>(res.code!=<span class="number">200</span>) <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(res.msg);</div><div class="line">                <span class="comment">//获取到最新的状态值</span></div><div class="line">                <span class="keyword">var</span> status=res.result.tc_status;</div><div class="line">                <span class="comment">//将最新的状态值呈现在页面中</span></div><div class="line">                <span class="comment">//--&gt;按照功能的划分，status.js文件的职责已经做完了，而呈现最新数据这个功能应该交给list.js来去实现 (单一职责原则)</span></div><div class="line"></div><div class="line">                <span class="comment">//--&gt;其实就是要把status这个数据传递到list.js文件中</span></div><div class="line">                callback(status);</div><div class="line">            &#125;</div><div class="line">        &#125;)</div><div class="line">    &#125;</div><div class="line">&#125;)</div><div class="line"></div><div class="line"><span class="comment">//注：list.js模块导入status.js并调用</span></div><div class="line">$(html).on(<span class="string">"click"</span>,<span class="string">".btn-status"</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</div><div class="line">  <span class="keyword">var</span> $btn=$(<span class="keyword">this</span>);</div><div class="line">  <span class="comment">//a、获取页面中的数据</span></div><div class="line">  <span class="keyword">var</span> tc_id=$(<span class="keyword">this</span>).parent().attr(<span class="string">"tc_id"</span>);</div><div class="line">  <span class="keyword">var</span> tc_status=$(<span class="keyword">this</span>).parent().attr(<span class="string">"tc_status"</span>);</div><div class="line">  <span class="comment">//b、把数据传到模块中处理</span></div><div class="line">  teacherStatus(tc_id,tc_status,<span class="function"><span class="keyword">function</span>(<span class="params">status</span>)</span>&#123;</div><div class="line">    <span class="comment">//这个形参status就接受了callback的实参</span></div><div class="line">    <span class="comment">//把修改页面数据的过程放在这个位置</span></div><div class="line">    <span class="comment">//要修改的其实用户最初点击注销-启用按钮所在的那一行数据</span></div><div class="line">    <span class="comment">//a、修改状态列文本</span></div><div class="line">    $btn.parent().siblings(<span class="string">".tc-status"</span>).text(</div><div class="line">      status==<span class="number">0</span>?<span class="string">"启用"</span>:<span class="string">"注销"</span></div><div class="line">    );</div><div class="line">    <span class="comment">//b、修改按钮的文本</span></div><div class="line">    $btn.text(status==<span class="number">0</span>?<span class="string">"注销"</span>:<span class="string">"启用"</span>);</div><div class="line">    <span class="comment">//c、同步修改tc_status属性值</span></div><div class="line">    $btn.parent().attr(<span class="string">"tc_status"</span>,status);</div><div class="line">  &#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure><h3 id="发布订阅模式-demo"><a href="#发布订阅模式-demo" class="headerlink" title="发布订阅模式(demo)"></a>发布订阅模式(demo)</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">&lt;script&gt;</div><div class="line">    <span class="function"><span class="keyword">function</span> <span class="title">f1</span>(<span class="params">callback</span>)</span>&#123;</div><div class="line">        <span class="built_in">console</span>.log(<span class="string">"一开始的代码"</span>);</div><div class="line">        callback(<span class="number">100</span>);</div><div class="line">        <span class="comment">//因为callback保存了匿名函数的内存地址，所以调用callback函数就相当于调用匿名函数</span></div><div class="line">        <span class="comment">//在调用callback的时候传递实参，那个这个实参也就被匿名函数的形参接收了</span></div><div class="line">        <span class="comment">//结果：status--&gt;100</span></div><div class="line">    &#125;</div><div class="line">    f1(<span class="function"><span class="keyword">function</span>(<span class="params">status</span>)</span>&#123;</div><div class="line">        <span class="built_in">console</span>.log(status);<span class="comment">//100</span></div><div class="line">    &#125;);</div><div class="line">&lt;<span class="regexp">/script&gt;</span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;讲师列表模块&quot;&gt;&lt;a href=&quot;#讲师列表模块&quot; class=&quot;headerlink&quot; title=&quot;讲师列表模块&quot;&gt;&lt;/a&gt;讲师列表模块&lt;/h2&gt;&lt;h3 id=&quot;bootstrap布局&quot;&gt;&lt;a href=&quot;#bootstrap布局&quot; class=&quot;headerlink&quot; title=&quot;bootstrap布局&quot;&gt;&lt;/a&gt;bootstrap布局&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;给button按钮添加一个类名：btn-block，就可以让这个按钮铺满整个容器&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;表单异步&quot;&gt;&lt;a href=&quot;#表单异步&quot; class=&quot;headerlink&quot; title=&quot;表单异步&quot;&gt;&lt;/a&gt;表单异步&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;默认是同步表单，页面刷新（资源重复加载）;&lt;/li&gt;
&lt;li&gt;把表单做成异步的表单；好处：局部刷新(e.preventDefault();从而阻止页面刷新)&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
